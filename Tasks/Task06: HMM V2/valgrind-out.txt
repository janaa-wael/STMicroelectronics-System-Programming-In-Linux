==8001== Memcheck, a memory error detector
==8001== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==8001== Using Valgrind-3.22.0-bd4db67b1d-20231031 and LibVEX; rerun with -h for copyright info
==8001== Command: ./Heap
==8001== Parent PID: 4510
==8001== 
--8001-- 
--8001-- Valgrind options:
--8001--    --leak-check=full
--8001--    --show-leak-kinds=all
--8001--    --track-origins=yes
--8001--    --verbose
--8001--    --log-file=valgrind-out.txt
--8001-- Contents of /proc/version:
--8001--   Linux version 6.8.0-41-generic (buildd@lcy02-amd64-100) (x86_64-linux-gnu-gcc-13 (Ubuntu 13.2.0-23ubuntu4) 13.2.0, GNU ld (GNU Binutils for Ubuntu) 2.42) #41-Ubuntu SMP PREEMPT_DYNAMIC Fri Aug  2 20:41:06 UTC 2024
--8001-- 
--8001-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3
--8001-- Page sizes: currently 4096, max supported 4096
--8001-- Valgrind library directory: /usr/libexec/valgrind
--8001-- Reading syms from /home/jana/Desktop/Task06/Heap
--8001-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--8001--   Considering /usr/lib/debug/.build-id/35/3e1b6cb0eebc08cf3ff812eae8a51b4efd684e.debug ..
--8001--   .. build-id is valid
--8001-- Reading syms from /usr/libexec/valgrind/memcheck-amd64-linux
--8001--    object doesn't have a dynamic symbol table
--8001-- Scheduler: using generic scheduler lock implementation.
--8001-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==8001== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-8001-by-jana-on-???
==8001== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-8001-by-jana-on-???
==8001== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-8001-by-jana-on-???
==8001== 
==8001== TO CONTROL THIS PROCESS USING vgdb (which you probably
==8001== don't want to do, unless you know exactly what you're doing,
==8001== or are doing some strange experiment):
==8001==   /usr/bin/vgdb --pid=8001 ...command...
==8001== 
==8001== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==8001==   /path/to/gdb ./Heap
==8001== and then give GDB the following command
==8001==   target remote | /usr/bin/vgdb --pid=8001
==8001== --pid is optional if only one valgrind process is running
==8001== 
--8001-- REDIR: 0x4028b00 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c2e1a (???)
--8001-- REDIR: 0x40272b0 (ld-linux-x86-64.so.2:index) redirected to 0x580c2e34 (???)
--8001-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--8001-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
==8001== WARNING: new redirection conflicts with existing -- ignoring it
--8001--     old: 0x04028b00 (strlen              ) R-> (0000.0) 0x580c2e1a ???
--8001--     new: 0x04028b00 (strlen              ) R-> (2007.0) 0x0484f340 strlen
--8001-- REDIR: 0x40274e0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4850460 (strcmp)
--8001-- REDIR: 0x4026910 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4853cd0 (mempcpy)
--8001-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--8001--   Considering /usr/lib/debug/.build-id/6d/64b17fbac799e68da7ebd9985ddf9b5cb375e6.debug ..
--8001--   .. build-id is valid
--8001-- REDIR: 0x4028ca0 (ld-linux-x86-64.so.2:strncmp) redirected to 0x484fc90 (strncmp)
--8001-- REDIR: 0x491f040 (libc.so.6:strnlen) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491f0d0 (libc.so.6:strpbrk) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491d190 (libc.so.6:strcmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x49363b0 (libc.so.6:wcsnlen) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491c280 (libc.so.6:memset) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x4935b20 (libc.so.6:wcslen) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x49a13c0 (libc.so.6:__memcpy_chk) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491c1f0 (libc.so.6:memrchr) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x4936350 (libc.so.6:wcsncpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491b710 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x49348e0 (libc.so.6:wcschr) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491d080 (libc.so.6:index) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491f100 (libc.so.6:rindex) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x4934990 (libc.so.6:wcscmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491c4a0 (libc.so.6:stpncpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x4942eb0 (libc.so.6:wmemchr) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491eee0 (libc.so.6:strncmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491c500 (libc.so.6:strcasecmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491e300 (libc.so.6:strcspn) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x49358f0 (libc.so.6:wcscpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491d010 (libc.so.6:strcat) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491ede0 (libc.so.6:strncasecmp_l) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491d100 (libc.so.6:strchrnul) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491b620 (libc.so.6:bcmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491e290 (libc.so.6:strcpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491c5a0 (libc.so.6:strcasecmp_l) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491ecb0 (libc.so.6:strlen) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491ef80 (libc.so.6:strncpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x4942f30 (libc.so.6:wmemcmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x49a14e0 (libc.so.6:__memmove_chk) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
==8001== WARNING: new redirection conflicts with existing -- ignoring it
--8001--     old: 0x04924860 (__memcpy_chk_sse2_un) R-> (2030.0) 0x04853dd0 __memcpy_chk
--8001--     new: 0x04924860 (__memcpy_chk_sse2_un) R-> (2024.0) 0x04853740 __memmove_chk
--8001-- REDIR: 0x491c430 (libc.so.6:stpcpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491bfb0 (libc.so.6:memmove) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491b5a0 (libc.so.6:memchr) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491f2d0 (libc.so.6:strspn) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491c0d0 (libc.so.6:mempcpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x491ed40 (libc.so.6:strncasecmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--8001-- REDIR: 0x4931800 (libc.so.6:__strrchr_sse2) redirected to 0x484ed80 (__strrchr_sse2)
--8001-- REDIR: 0x492b910 (libc.so.6:__strlen_sse2) redirected to 0x484f280 (__strlen_sse2)
--8001-- REDIR: 0x109dfb (NONE:malloc) redirected to 0x48467b0 (malloc)
--8001-- REDIR: 0x4925140 (libc.so.6:__memset_sse2_unaligned) redirected to 0x4852c50 (memset)
--8001-- REDIR: 0x49298e0 (libc.so.6:__strchrnul_sse2) redirected to 0x48537b0 (strchrnul)
--8001-- REDIR: 0x4924870 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4850590 (memcpy@GLIBC_2.2.5)
--8001-- REDIR: 0x4924850 (libc.so.6:__mempcpy_sse2_unaligned) redirected to 0x48538d0 (mempcpy)
==8001== Invalid write of size 4
==8001==    at 0x1093AB: split (HMM.c:58)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A33C: random_alloc_realloc_calloc_test (stress_test.c:73)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Address 0x4062848 is 0 bytes after the brk data segment limit 0x4062848
==8001== 
==8001== Invalid write of size 8
==8001==    at 0x1093BE: split (HMM.c:59)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A33C: random_alloc_realloc_calloc_test (stress_test.c:73)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Address 0x4062850 is 8 bytes after the brk data segment limit 0x4062848
==8001== 
==8001== Invalid write of size 8
==8001==    at 0x1093BE: split (HMM.c:59)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A23D: random_alloc_realloc_calloc_test (stress_test.c:57)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Address 0x4074458 is 0 bytes after the brk data segment limit 0x4074458
==8001== 
==8001== Conditional jump or move depends on uninitialised value(s)
==8001==    at 0x109487: MyMalloc (HMM.c:90)
==8001==    by 0x109891: MyCalloc (HMM.c:258)
==8001==    by 0x10A0A7: random_alloc_realloc_calloc_test (stress_test.c:35)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Uninitialised value was created
==8001==    at 0x498777B: brk (brk.c:37)
==8001==    by 0x4990B53: sbrk (sbrk.c:74)
==8001==    by 0x109380: split (HMM.c:55)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A23D: random_alloc_realloc_calloc_test (stress_test.c:57)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001== 
==8001== Conditional jump or move depends on uninitialised value(s)
==8001==    at 0x109491: MyMalloc (HMM.c:101)
==8001==    by 0x109891: MyCalloc (HMM.c:258)
==8001==    by 0x10A0A7: random_alloc_realloc_calloc_test (stress_test.c:35)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Uninitialised value was created
==8001==    at 0x498777B: brk (brk.c:37)
==8001==    by 0x4990B53: sbrk (sbrk.c:74)
==8001==    by 0x109380: split (HMM.c:55)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A23D: random_alloc_realloc_calloc_test (stress_test.c:57)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001== 
==8001== 
==8001== Process terminating with default action of signal 1 (SIGHUP)
==8001==    at 0x109456: MyMalloc (HMM.c:92)
==8001==    by 0x10A23D: random_alloc_realloc_calloc_test (stress_test.c:57)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001== 
==8001== HEAP SUMMARY:
==8001==     in use at exit: 1,024 bytes in 1 blocks
==8001==   total heap usage: 1 allocs, 0 frees, 1,024 bytes allocated
==8001== 
==8001== Searching for pointers to 1 not-freed blocks
==8001== Checked 1,102,672 bytes
==8001== 
==8001== 1,024 bytes in 1 blocks are still reachable in loss record 1 of 1
==8001==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8001==    by 0x48EF1A4: _IO_file_doallocate (filedoalloc.c:101)
==8001==    by 0x48FF513: _IO_doallocbuf (genops.c:347)
==8001==    by 0x48FCF7F: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:745)
==8001==    by 0x48FDA9E: _IO_new_file_xsputn (fileops.c:1244)
==8001==    by 0x48FDA9E: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==8001==    by 0x48F1C4C: puts (ioputs.c:40)
==8001==    by 0x10A762: main (stress_test.c:169)
==8001== 
==8001== LEAK SUMMARY:
==8001==    definitely lost: 0 bytes in 0 blocks
==8001==    indirectly lost: 0 bytes in 0 blocks
==8001==      possibly lost: 0 bytes in 0 blocks
==8001==    still reachable: 1,024 bytes in 1 blocks
==8001==         suppressed: 0 bytes in 0 blocks
==8001== 
==8001== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
==8001== 
==8001== 1 errors in context 1 of 5:
==8001== Conditional jump or move depends on uninitialised value(s)
==8001==    at 0x109491: MyMalloc (HMM.c:101)
==8001==    by 0x109891: MyCalloc (HMM.c:258)
==8001==    by 0x10A0A7: random_alloc_realloc_calloc_test (stress_test.c:35)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Uninitialised value was created
==8001==    at 0x498777B: brk (brk.c:37)
==8001==    by 0x4990B53: sbrk (sbrk.c:74)
==8001==    by 0x109380: split (HMM.c:55)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A23D: random_alloc_realloc_calloc_test (stress_test.c:57)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001== 
==8001== 
==8001== 1 errors in context 2 of 5:
==8001== Conditional jump or move depends on uninitialised value(s)
==8001==    at 0x109487: MyMalloc (HMM.c:90)
==8001==    by 0x109891: MyCalloc (HMM.c:258)
==8001==    by 0x10A0A7: random_alloc_realloc_calloc_test (stress_test.c:35)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Uninitialised value was created
==8001==    at 0x498777B: brk (brk.c:37)
==8001==    by 0x4990B53: sbrk (sbrk.c:74)
==8001==    by 0x109380: split (HMM.c:55)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A23D: random_alloc_realloc_calloc_test (stress_test.c:57)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001== 
==8001== 
==8001== 1 errors in context 3 of 5:
==8001== Invalid write of size 8
==8001==    at 0x1093BE: split (HMM.c:59)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A23D: random_alloc_realloc_calloc_test (stress_test.c:57)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Address 0x4074458 is 0 bytes after the brk data segment limit 0x4074458
==8001== 
==8001== 
==8001== 1 errors in context 4 of 5:
==8001== Invalid write of size 8
==8001==    at 0x1093BE: split (HMM.c:59)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A33C: random_alloc_realloc_calloc_test (stress_test.c:73)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Address 0x4062850 is 8 bytes after the brk data segment limit 0x4062848
==8001== 
==8001== 
==8001== 1 errors in context 5 of 5:
==8001== Invalid write of size 4
==8001==    at 0x1093AB: split (HMM.c:58)
==8001==    by 0x109599: MyMalloc (HMM.c:134)
==8001==    by 0x10A33C: random_alloc_realloc_calloc_test (stress_test.c:73)
==8001==    by 0x10A76C: main (stress_test.c:170)
==8001==  Address 0x4062848 is 0 bytes after the brk data segment limit 0x4062848
==8001== 
==8001== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
